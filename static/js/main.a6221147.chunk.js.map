{"version":3,"sources":["services/tvmaze.js","components/ErrorNotice.js","components/Loading.js","components/NavBar.js","components/Show.js","components/ShowReplace.js","components/Episode.js","components/EpisodeList.js","App.js","reportWebVitals.js","index.js"],"names":["showContext","createContext","showSearchContext","episodeReplaceContext","API_BASE","truncateString","str","num","length","slice","useShow","useContext","formatEpisode","episode","formattedEpisode","name","image","medium","number","season","subheader","formatDate","airdate","summary","replace","date","Date","toString","formatShow","show","formattedShow","episodes","formattedSeasons","reduce","acc","val","seasonsToIndex","seasonIndex","seasons","push","info","formatSeasons","_embedded","genres","join","premiered","getShowCount","req","Request","method","Promise","resolve","reject","fetch","then","data","status","json","catch","reason","findShow","showName","message","ShowProvider","children","useState","setShow","showID","setShowID","Set","blockList","setBlockList","showCount","setShowCount","useEffect","min","max","count","Object","keys","Math","floor","random","has","getShow","console","error","ret","add","Provider","value","episodeNumber","seasonNumber","targEp","find","ep","newEpisode","map","index","ErrorNotice","props","className","msg","LoadingIcon","version","x","y","width","height","viewBox","fill","d","attributeType","attributeName","type","from","to","dur","repeatCount","NavBar","searchShow","searchStr","setSearchStr","setError","searching","setSearching","handleSubmit","event","preventDefault","onSubmit","placeholder","aria-label","aria-describedby","onChange","target","id","onClick","Loading","Show","src","alt","ShowReplace","setSeasonIndex","setEpisodeNumber","replaceEpisode","Number","seasonData","Episode","Season","EpisodeList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6221147.chunk.js","sourcesContent":["import { useEffect, useState, createContext, useContext } from \"react\";\n\nconst showContext = createContext();\nconst showSearchContext = createContext();\nconst episodeReplaceContext = createContext();\nconst API_BASE = \"https://api.tvmaze.com\";\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction truncateString(str, num) {\n  if (str.length <= num) {\n    return str;\n  }\n  return str.slice(0, num) + \"...\";\n}\n\nfunction useShow() {\n  return useContext(showContext);\n}\n\nfunction useShowSearch() {\n  return useContext(showSearchContext);\n}\n\nfunction useEpisodeReplace() {\n  return useContext(episodeReplaceContext);\n}\n\nfunction formatEpisode(episode) {\n  const formattedEpisode = {};\n  const stripHTML = /(<([^>]+)>)/gi;\n  formattedEpisode.name = episode.name;\n  formattedEpisode.image = (episode.image && episode.image.medium) || null;\n  formattedEpisode.number = episode.number;\n  formattedEpisode.season = episode.season;\n  formattedEpisode.subheader = `Season ${episode.season} | Episode ${\n    episode.number\n  } | ${formatDate(episode.airdate)}`;\n  formattedEpisode.summary =\n    episode.summary &&\n    truncateString(episode.summary.replace(stripHTML, \"\"), 270);\n  return formattedEpisode;\n}\n\n// Some shows do not start with a season 1 such as show ID 47892\n// Some shows do not have any episodes but are still listed: 31012\nfunction formatSeasons(show, episodes) {\n  if (episodes.length < 1) return;\n  const formattedSeasons = episodes.reduce(\n    (acc, val) => {\n      if (typeof acc.seasonsToIndex[val.season] === \"undefined\") {\n        const seasonIndex =\n          acc.seasons.push({\n            info: {\n              airdate: formatDate(val.airdate),\n              number: val.season,\n            },\n            episodes: [],\n          }) - 1;\n        acc.seasonsToIndex[val.season] = seasonIndex;\n      }\n      acc.seasons[acc.seasonsToIndex[val.season]].episodes.push(\n        formatEpisode(val)\n      );\n      return acc;\n    },\n    { seasonsToIndex: {}, seasons: [] }\n  );\n  show.seasons = formattedSeasons.seasons;\n}\n\nfunction formatDate(date) {\n  const newDate = new Date(date).toString();\n  const exp = /^[^ ]+ (\\w+) (\\d+) (\\d+).*/;\n  return newDate.replace(exp, \"$1. $2, $3\");\n}\n\nfunction formatShow(show) {\n  const formattedShow = {};\n  formatSeasons(formattedShow, show._embedded.episodes);\n  formattedShow.name = show.name;\n  formattedShow.image = (show.image && show.image.medium) || null;\n\n  formattedShow.subheader =\n    (show.genres.length > 0 &&\n      show.genres.join(\", \") + ((show.premiered && \" | \") || \"\")) ||\n    \"\";\n\n  formattedShow.subheader +=\n    (show.premiered && `Premiered on ${formatDate(show.premiered)}`) || \"\";\n\n  formattedShow.summary =\n    show.summary &&\n    truncateString(show.summary.replace(/(<([^>]+)>)/gi, \"\"), 700);\n\n  return formattedShow;\n}\n\nfunction getShow(showID) {\n  const req = new Request(`${API_BASE}/shows/${showID}?embed=episodes`, {\n    method: \"GET\",\n  });\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then((data) => {\n        if (data.status === 200) {\n          resolve(data.json());\n        } else {\n          reject(data);\n        }\n      })\n      .catch((reason) => {\n        reject(reason);\n      });\n  });\n}\n\nfunction getShowCount() {\n  const req = new Request(`${API_BASE}/updates/shows`, {\n    method: \"GET\",\n  });\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then((data) => {\n        if (data.status === 200) {\n          resolve(data.json());\n        } else {\n          reject(data);\n        }\n      })\n      .catch((reason) => {\n        reject(reason);\n      });\n  });\n}\n\nfunction findShow(showName) {\n  const req = new Request(\n    `${API_BASE}/singlesearch/shows?q=${showName}&embed=episodes`,\n    {\n      method: \"GET\",\n    }\n  );\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then((data) => {\n        if (data.status === 200) {\n          resolve(data.json());\n        } else {\n          reject({ message: `There is no show matching \"${showName}\"` });\n        }\n      })\n      .catch((reason) => {\n        reject(reason);\n      });\n  });\n}\n\nfunction ShowProvider({ children }) {\n  const [show, setShow] = useState();\n  const [showID, setShowID] = useState();\n  const [blockList, setBlockList] = useState(new Set());\n  const [showCount, setShowCount] = useState();\n\n  useEffect(() => {\n    let num;\n    // Sometimes a show is no longer available such as ID 121, so ensure a valid page is always displayed.\n    while (true) {\n      getShowCount().then((count) => {\n        setShowCount(Object.keys(count).length);\n      });\n      num = getRandomInt(1, showCount);\n      if (!blockList.has(num)) {\n        break;\n      }\n    }\n    setShowID(num);\n  }, [blockList, showCount]);\n\n  useEffect(() => {\n    if (showID) {\n      getShow(showID)\n        .then((data) => {\n          setShow(formatShow(data));\n        })\n        .catch((reason) => {\n          console.error(\n            `Failed to get show. Show ID: ${showID}. Reason: ${reason}`\n          );\n          setBlockList((blockList) => {\n            const ret = new Set(blockList);\n            // We add invalid IDs to the blocklist so we don't attempt to use them again.\n            ret.add(showID);\n            return ret;\n          });\n        });\n    }\n  }, [showID]);\n\n  function searchShow(showName) {\n    return findShow(showName).then((json) => {\n      setShow(formatShow(json));\n    });\n  }\n\n  function replaceEpisode(showName, seasonIndex, episodeNumber) {\n    const seasonNumber = show.seasons[seasonIndex].info.number;\n    return new Promise((resolve, reject) => {\n      findShow(showName)\n        .then((json) => {\n          const tempShow = json;\n          const targEp = tempShow._embedded.episodes.find(\n            (ep) => ep.season === seasonNumber && ep.number === episodeNumber\n          );\n          if (!targEp) {\n            reject({\n              message:\n                \"There is no matching episode for the season, episode, and show provided.\",\n            });\n            return;\n          }\n\n          const newEpisode = formatEpisode(targEp);\n\n          setShow((show) => {\n            const seasons = show.seasons.map((season, index) => {\n              if (season.info.number === seasonNumber) {\n                // Replace the episodes\n                const episodes = season.episodes.map((ep) => {\n                  if (ep.number === episodeNumber) {\n                    return newEpisode;\n                  }\n                  return ep;\n                });\n                return { ...season, episodes: episodes };\n              }\n              return season;\n            });\n\n            return { ...show, seasons: seasons };\n          });\n          resolve();\n        })\n        .catch((reason) => {\n          reject(reason);\n        });\n    });\n  }\n\n  return (\n    <showContext.Provider value={show}>\n      <showSearchContext.Provider value={searchShow}>\n        <episodeReplaceContext.Provider value={replaceEpisode}>\n          {children}\n        </episodeReplaceContext.Provider>\n      </showSearchContext.Provider>\n    </showContext.Provider>\n  );\n}\nexport { useShowSearch, useEpisodeReplace, useShow, ShowProvider };\n","import \"./ErrorNotice.css\";\nfunction ErrorNotice(props) {\n  return (\n    <div className=\"d-flex align-items-center container error-notice mt-4\">\n      <p className=\"text-danger m-0 p-2\">{props.msg}</p>\n    </div>\n  );\n}\n\nexport default ErrorNotice;\n","function LoadingIcon() {\n  return (\n    <div>\n      <svg\n        version=\"1.1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"60px\"\n        height=\"60px\"\n        viewBox=\"0 0 50 50\"\n      >\n        <path\n          fill=\"#0d6efd\"\n          d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\"\n        >\n          <animateTransform\n            attributeType=\"xml\"\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 25 25\"\n            to=\"360 25 25\"\n            dur=\"0.6s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </div>\n  );\n}\n\nexport default LoadingIcon;\n","import { useShowSearch } from \"../services/tvmaze.js\";\nimport { useState } from \"react\";\nimport ErrorNotice from \"./ErrorNotice.js\";\nimport LoadingIcon from \"./Loading.js\";\n\nfunction NavBar() {\n  const searchShow = useShowSearch();\n  const [searchStr, setSearchStr] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [searching, setSearching] = useState(false);\n\n  function handleChange(event) {\n    setSearchStr(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (searchStr === \"\") {\n      setError(\"Please enter a TV show name.\");\n      setSearchStr(\"\");\n      return;\n    }\n\n    setSearching(true);\n    searchShow(searchStr)\n      .then(() => {\n        setError(null);\n        setSearching(false);\n      })\n      .catch((reason) => {\n        setError(`There is no show matching \"${searchStr}\"`);\n        setSearching(false);\n      });\n\n    setSearchStr(\"\");\n  }\n\n  return (\n    <>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <div className=\"container container-fluid\">\n          <h2 className=\"text-light\">Episode Switcher</h2>\n          <form className=\"d-flex\" onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter a TV show\"\n              aria-label=\"Enter a TV show\"\n              aria-describedby=\"search-button\"\n              value={searchStr}\n              onChange={handleChange}\n            />\n            <button\n              className=\"btn bg-secondary text-light\"\n              type=\"button\"\n              id=\"search-button\"\n              onClick={handleSubmit}\n            >\n              Search\n            </button>\n          </form>\n        </div>\n      </nav>\n      {error && <ErrorNotice msg={error} />}\n      {searching && <LoadingIcon />}\n    </>\n  );\n}\n\nexport default NavBar;\n","import \"./Show.css\";\nimport { useShow } from \"../services/tvmaze.js\";\n\nfunction Show() {\n  const show = useShow();\n  if (show) {\n    return (\n      <div className=\"show-container d-flex\">\n        {(show.image && (\n          <img className=\"show-image\" src={show.image} alt=\"Show\" />\n        )) || (\n          <div className=\"show-image d-flex align-items-center justify-content-center bg-secondary\">\n            <p className=\"text-light \">NA</p>\n          </div>\n        )}\n        <div className=\"show-content container\">\n          <h1 className=\"text-left\">{show.name}</h1>\n          <p className=\"text-left text-secondary\">{show.subheader}</p>\n          <p className=\"text-left mt-4\">{show.summary}</p>\n        </div>\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default Show;\n","import \"./ShowReplace.css\";\nimport ErrorNotice from \"./ErrorNotice.js\";\nimport LoadingIcon from \"./Loading.js\";\nimport { useState, useEffect } from \"react\";\nimport { useShow, useEpisodeReplace } from \"../services/tvmaze.js\";\n\nfunction ShowReplace() {\n  const [error, setError] = useState();\n  const [seasonIndex, setSeasonIndex] = useState(0);\n  const [episodeNumber, setEpisodeNumber] = useState(1);\n  const [searchStr, setSearchStr] = useState(\"\");\n  const [searching, setSearching] = useState(false);\n  const show = useShow();\n  const replaceEpisode = useEpisodeReplace();\n\n  useEffect(() => {\n    setError(null);\n  }, [show]);\n\n  useEffect(() => {\n    if (show && show.seasons && !show.seasons[seasonIndex]) {\n      setSeasonIndex(0);\n      setEpisodeNumber(1);\n    }\n  }, [show, seasonIndex]);\n\n  function episodeChange(event) {\n    setEpisodeNumber(Number(event.target.value));\n  }\n\n  function handleSearchChange(event) {\n    setSearchStr(event.target.value);\n  }\n\n  function seasonChange(event) {\n    setSeasonIndex(Number(event.target.value));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (searchStr === \"\") {\n      setError(\"Please enter a TV show name.\");\n      return;\n    }\n    setSearching(true);\n    replaceEpisode(searchStr, seasonIndex, episodeNumber)\n      .then(() => {\n        setSearching(false);\n        setError(null);\n      })\n      .catch((reason) => {\n        setError(reason.message);\n        setSearching(false);\n      });\n  }\n\n  // Some shows do not have episodes / seasons however they will still be retrieved from the API.\n  if (show && show.seasons) {\n    return (\n      <>\n        <form>\n          <div className=\"replace-container d-flex align-items-center pt-4\">\n            <div>\n              <span className=\"mr-4\">Replace</span>\n              <select\n                className=\"show-select custom-select mr-4\"\n                aria-label=\"Select Season\"\n                onChange={seasonChange}\n              >\n                {show.seasons.map((seasonData, index) => {\n                  return (\n                    <option key={index} value={index}>\n                      Season {seasonData.info.number}\n                    </option>\n                  );\n                })}\n              </select>\n              <select\n                className=\"show-select custom-select mr-4\"\n                aria-label=\"Select Episode\"\n                onChange={episodeChange}\n              >\n                {show.seasons[seasonIndex]?.episodes.map((episode, index) => {\n                  return (\n                    <option key={index} value={episode.number}>\n                      Episode {episode.number}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <div className=\"replace-content d-flex align-items-center mr-4\">\n              <span className=\"text-center mr-4\">with</span>\n              <input\n                className=\"form-control me-2 mr-4\"\n                aria-label=\"Show Replacement\"\n                value={searchStr}\n                onChange={handleSearchChange}\n              />\n              <button\n                className=\"btn bg-dark text-light\"\n                type=\"submit\"\n                onClick={handleSubmit}\n              >\n                Replace\n              </button>\n            </div>\n          </div>\n        </form>\n        {error && <ErrorNotice msg={error} />}\n        {searching && (\n          <div className=\"d-flex\">\n            <LoadingIcon />\n          </div>\n        )}\n      </>\n    );\n  }\n  return null;\n}\n\nexport default ShowReplace;\n","import \"./Episode.css\";\nimport LoadingIcon from \"./Loading.js\";\nfunction Episode(props) {\n  if (props.episode) {\n    return (\n      <div className=\"episode d-flex pb-5\">\n        {(props.episode.image && (\n          <img\n            className=\"episode-image\"\n            src={props.episode.image}\n            alt=\"Episode\"\n          />\n        )) || (\n          <div className=\"episode-image d-flex align-items-center justify-content-center bg-secondary text-light\">\n            <p>NA</p>\n          </div>\n        )}\n        <div className=\"episode-content container\">\n          <h4 className=\"text-left\">{props.episode.name}</h4>\n          <p className=\"text-left text-secondary\">{props.episode.subheader}</p>\n          <p className=\"text-left\">{props.episode.summary}</p>\n        </div>\n      </div>\n    );\n  }\n  return <LoadingIcon />;\n}\n\nexport default Episode;\n","import Episode from \"./Episode.js\";\nimport { useShow } from \"../services/tvmaze.js\";\nimport LoadingIcon from \"./Loading.js\";\n\nfunction Season(props) {\n  return (\n    <>\n      <h3 className=\"text-left\">Season {props.seasonData.number}</h3>\n      <p className=\"text-left text-secondary\">\n        {`${props.episodes.length} episodes | Aired ${props.seasonData.airdate}`}\n      </p>\n      <hr></hr>\n      <ol>\n        {props.episodes.map((episode, index) => {\n          return (\n            <li key={index}>\n              <Episode episode={episode} />\n            </li>\n          );\n        })}\n      </ol>\n    </>\n  );\n}\n\nfunction EpisodeList() {\n  const show = useShow();\n\n  if (!show) {\n    return <LoadingIcon />;\n  } else if (show.seasons) {\n    return (\n      <ol className=\"pt-4\">\n        {show.seasons.map((seasonData, season) => {\n          return (\n            <li key={season}>\n              <Season\n                seasonData={seasonData.info}\n                episodes={seasonData.episodes}\n              />\n            </li>\n          );\n        })}\n      </ol>\n    );\n  } else {\n    return (\n      <div className=\"d-flex flex-column text-dark align-items-start bg-warning mt-4\">\n        <p className=\"p-2 m-0\">This show does not have any seasons/episodes.</p>\n        <p className=\"p-2 m-0\">Please try another show.</p>\n      </div>\n    );\n  }\n}\n\nexport default EpisodeList;\n","import \"./App.css\";\nimport NavBar from \"./components/NavBar.js\";\nimport Show from \"./components/Show.js\";\nimport ShowReplace from \"./components/ShowReplace.js\";\nimport EpisodeList from \"./components/EpisodeList.js\";\nimport { ShowProvider } from \"./services/tvmaze.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ShowProvider>\n        <NavBar />\n        <div className=\"container pt-4\">\n          <Show />\n          <ShowReplace />\n          <EpisodeList />\n        </div>\n      </ShowProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}